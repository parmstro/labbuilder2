---
# VMware specific initialization begins here
- name: "init_vmware"
  hosts: build_control
  become: true

  tasks:

    - name: "Include vaulted vars"
      ansible.builtin.include_vars:
        file: "~/rhisbuilder_vault.yml"

    - name: "Include top level vars"
      ansible.builtin.include_vars:
        dir: "../vars"

    - name: "Set a fact"  
      ansible.builtin.set_fact:
        fqdn: "{{ instance_data | selectattr('name', 'equalto', 'sat_primary') | map(attribute='fqdn') | first }}"

    - name: "Set a fact"  
      ansible.builtin.set_fact:
        pv_list: "{{ instance_data | selectattr('name', 'equalto', 'sat_primary') | map(attribute='volumes.pv_list') | first }}"

    - name: "Set a fact"  
      ansible.builtin.set_fact:
        var_size_gb: "{{ instance_data | selectattr('name', 'equalto', 'sat_primary') | map(attribute='volumes.var_size_gb') | first }}"

    - name: "Set a fact"  
      ansible.builtin.set_fact:
        var_log_size_gb: "{{ instance_data | selectattr('name', 'equalto', 'sat_primary') | map(attribute='volumes.var_log_size_gb') | first }}"

    - name: "Set a fact"  
      ansible.builtin.set_fact:
        var_log_audit_size_gb: "{{ instance_data | selectattr('name', 'equalto', 'sat_primary') | map(attribute='volumes.var_log_audit_size_gb') | first }}"

    - name: "Set a fact"  
      ansible.builtin.set_fact:
        var_tmp_size_gb: "{{ instance_data | selectattr('name', 'equalto', 'sat_primary') | map(attribute='volumes.var_tmp_size_gb') | first }}"

    - name: "Set a fact"  
      ansible.builtin.set_fact:
        tmp_size_gb: "{{ instance_data | selectattr('name', 'equalto', 'sat_primary') | map(attribute='volumes.tmp_size_gb') | first }}"

    - name: "Set a fact"  
      ansible.builtin.set_fact:
        home_size_gb: "{{ instance_data | selectattr('name', 'equalto', 'sat_primary') | map(attribute='volumes.home_size_gb') | first }}"

    - debug:
        var: fqdn

    - debug:
        var: pv_list

    - debug:
        var: var_size_gb

    - debug:
        var: var_log_size_gb

    - debug:
        var: var_log_audit_size_gb

    - debug:
        var: var_tmp_size_gb

    - debug:
        var: tmp_size_gb

    - debug:
        var: home_size_gb

    - name: "Configure the storage"
      block:
        - name: "Ensure the new disk is in the VG"
          community.general.lvg:
            vg: "rootvg"
            pvs: "{{ pv_list }}"
            pvresize: true
            state: "present"
          tags:
            - build

        - name: "Expand /var volume and filesystem"
          community.general.lvol:
            vg: "rootvg"
            lv: "varlv"
            size: "{{ var_size_gb }}"
            resizefs: true
          tags:
            - build

        - name: "Expand /var/log volume and filesystem"
          community.general.lvol:
            vg: "rootvg"
            lv: "var_loglv"
            size: "{{ var_log_size_gb }}"
            resizefs: true
          tags:
            - build

        - name: "Expand /var/log/audit volume and filesystem"
          community.general.lvol:
            vg: "rootvg"
            lv: "var_log_auditlv"
            size: "{{ var_log_audit_size_gb }}"
            resizefs: true
          tags:
            - build

        - name: "Expand /var/tmp volume and filesystem"
          community.general.lvol:
            vg: "rootvg"
            lv: "var_tmplv"
            size: "{{ var_tmp_size_gb }}"
            resizefs: true
          tags:
            - build

        - name: "Expand /tmp volume and filesystem"
          community.general.lvol:
            vg: "rootvg"
            lv: "tmplv"
            size: "{{ tmp_size_gb }}"
            resizefs: true
          tags:
            - build

        - name: "Expand /home volume and filesystem"
          community.general.lvol:
            vg: "rootvg"
            lv: "homelv"
            size: "{{ home_size_gb }}"
            resizefs: true
          tags:
            - build
  
      delegate_to: "{{ fqdn }}"
      become: true

